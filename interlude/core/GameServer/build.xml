<?xml version="1.0" encoding="UTF-8"?>
<project name="L2scoria_GameServer" default="dist" basedir=".">
    <description>
        This script will build the L2J-Scoria server. Thanks for Using our Pack.
        
        This program is comerical   
        
    </description>
    
    <property name="src" location="java"/>
    <property name="lib" location="lib"/>
    <property name="build" location="build"/>
    <property name="build.classes" location="${build}/classes"/>
	<property name="build.mmo" location="${build}/mmo"/>
    <property name="build.dist" location="${build}/dist"/>
	<property name="build.dist.login" location="${build.dist}/L2Jscoria-Login"/>
	<property name="build.dist.login.lib" location="${build.dist}/L2Jscoria-Login/lib"/>
	<property name="build.dist.game" location="${build.dist}/L2Jscoria-Game"/>
	<property name="build.dist.game.lib" location="${build.dist}/L2Jscoria-Game/lib"/>
	<property name="properties-file" location="${build.dist}/L2Jscoria-Game/config/version/l2scoria-server.properties"/>
    
    <path id="classpath">
        <fileset dir="${lib}">
            <include name="c3p0-0.9.1.2.jar"/>
            <include name="bsh-2.0b5.jar"/>
            <include name="bsh-engine.jar"/>
        	<include name="commons-logging-1.1.jar"/>
        	<include name="commons-lang-2.1.jar"/>
        	<include name="jython.jar"/>
        	<include name="jython-engine.jar"/>
        	<include name="javolution.jar"/>
        	<include name="mysql-connector-java-5.1.8-bin.jar"/>
        	<include name="l2scoria-mmocore-2.jar"/>
        	<include name="bcprov-jdk16-144.jar"/>
        	<include name="xmlrpc-common-3.1.2.jar"/>
        	<include name="xmlrpc-server-3.1.2.jar"/>
        	<include name="ws-commons-util-1.0.2.jar"/>
                <include name="log4j-1.2.17.jar"/>
        	<include name="lameguard-1.9.5.jar"/>
                <include name="ExtAPI.jar"/>
        	<include name="akumu.geoengine.1.2.0.7.jar"/>
            <include name="trove-2.1.0.jar"/>
            <include name="log4j-1.2.16.jar"/>
        </fileset>
    </path>   
    
    <target name="init"
    	depends="clean"
        description="Create the output directories.">

        <mkdir dir="${build}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.dist}" />
    	<mkdir dir="${build.dist.login}" />
    	<mkdir dir="${build.dist.login.lib}" />
		<mkdir dir="${build.dist.game}" />
    	<mkdir dir="${build.dist.game.lib}" />
    	<mkdir dir="${build.mmo}"/>
    	<mkdir dir="${build.dist}/accmanager"/>
    	<mkdir dir="${build.dist}/register"/>
    </target>
    
    <target name="mmocore"
    	depends = "init"
		description="Compile mmocore">
    	<javac destdir="${build.mmo}"
        	optimize="on"
        	debug="on"
        	source="1.5"
        	target="1.5"
 	   		encoding="utf-8"
        	nowarn="off"
        	includeantruntime="false">
     		<src path="../initial/mmocore/java"/>
     	    <classpath refid="classpath"/>   
         </javac>
         <jar destfile="lib/l2scoria-mmocore-2.jar">
            <fileset dir="${build.mmo}"/>
        </jar>
    	
	</target>

	<target name="compile"
            depends="version,mmocore"
            description="Compile the source.">

        <javac destdir="${build.classes}"
               optimize="on"
               debug="on"
               source="1.5"
               target="1.5"
        	   encoding="utf-8"
               nowarn="off"
        	   includeantruntime="false">
            <src path="${src}"/>
            <classpath refid="classpath"/>   
        </javac>
    </target>
    
    
    <target name="jar"
            depends="compile"
            description="Create the jar file">

        <jar destfile="${build}/l2scoria-core-3.jar">
            <fileset dir="${build.classes}"/>
            <manifest>
                <attribute name="Main-Class" value="com.l2scoria.Server"/>
                <attribute name="Class-Path" value=". bsh-2.0b5.jar bsh-engine.jar commons-logging-1.1.jar commons-lang-2.1.jar c3p0-0.9.1.2.jar jython.jar jython-engine.jar mysql-connector-java-5.1.8-bin.jar javolution.jar l2scoria-mmocore-2.jar log4j-1.2.17.jar"/>
            </manifest>
        </jar>
        
    	<copy todir="${build.dist.login.lib}">
            <fileset dir="${build}">
                <include name="l2scoria-core-3.jar"/>
			</fileset>
        </copy>
    	<copy todir="${build.dist.game.lib}">
            <fileset dir="${build}">
                <include name="l2scoria-core-3.jar"/>
			</fileset>
        </copy>
        
	</target>
    

    <target name="compile.gcj"
            depends="jar"
            description="Build machine executable binary">  
            
        <exec dir="." executable="gcj" failifexecutionfails="false" os="linux:Linux:freebsd:FreeBSD" >
            <arg line="-O3 ${build.dist}/l2scoria-core-3.jar  -o ${build.dist}/l2scoria-core-3 --main=com.l2scoria.Server"/>
        </exec>
    </target>
 
 
    <target name="dist" depends="jar">
    	
    	<copy todir="${build.dist.login}">
            <fileset dir="config/others">
                <include name="log.cfg"/>
                <include name="banned_ip.cfg"/>
                <include name="console.cfg"/>
            	<include name="servername.xml"/>
			</fileset>
        </copy>
    	
    	<copy todir="${build.dist.game}">
            <fileset dir="config/others">
                <include name="log.cfg"/>
                <include name="console.cfg"/>
			</fileset>
        </copy>
    	
    	<copy todir="${build.dist.game.lib}">
			<fileset dir="${src}/../lib">
				<include name="*.jar"/>
			</fileset>
		</copy>
    	
    	<copy todir="${build.dist.login.lib}">
			<fileset dir="${src}/../lib">
				<include name="c3p0-0.9.1.2.jar"/>
				<include name="mysql-connector-java-5.1.8-bin.jar"/>
				<include name="javolution.jar"/>
				<include name="l2scoria-mmocore-2.jar"/>
	        	<include name="xmlrpc-common-3.1.2.jar"/>
	        	<include name="xmlrpc-server-3.1.2.jar"/>
	        	<include name="ws-commons-util-1.0.2.jar"/>
			</fileset>
		</copy>
        
        <copy todir="${build.dist.login}">
            <fileset dir="dist">
                <include name="startAccountManager.*"/>
                <include name="startSQLAccountManager.*"/>
                <include name="LoginServer_loop.sh"/>
                <include name="startLoginServer.*"/>
            	<include name="RegisterGameServer.*"/>
            	<include name="setlog.*"/>
				<include name="anti_ddos.*"/>
            </fileset>
        </copy>
    	<copy todir="${build.dist.game}">
            <fileset dir="dist">
                <include name="GameServer_loop.sh"/>
                <include name="startGameServer.*"/>
            	<include name="hibernate.cfg.xml"/>
            	<include name="setgame.*"/>
            	<include name="startBackup.*"/>
            </fileset>
        </copy>
    	
		<fixcrlf 	srcdir="${build.dist.game}"
					eol="lf"
					eof="remove"
					includes="**/*.sh">
		</fixcrlf>
    	<fixcrlf 	srcdir="${build.dist.login}"
					eol="lf"
					eof="remove"
					includes="**/*.sh">
		</fixcrlf>
		
		<fixcrlf 	srcdir="${build.dist.game}"
					eol="crlf"
					eof="remove"
					includes="**/*.bat">
		</fixcrlf>
    	<fixcrlf 	srcdir="${build.dist.login}"
					eol="crlf"
					eof="remove"
					includes="**/*.bat">
		</fixcrlf>
    	
    	<copy todir="${build.dist}/accmanager">
    		<fileset dir="accountManager">
    			<include name="*"/>
    		</fileset>
    	</copy>
    	<copy todir="${build.dist}/accmanager/config">
    		<fileset dir="accountManager/config">
    			<include name="*"/>
    		</fileset>
    	</copy>
    	<copy todir="${build.dist}/accmanager/lib">
    		<fileset dir="accountManager/lib">
    			<include name="*.jar"/>
    		</fileset>
    	</copy>
    	<copy todir="${build.dist}/register">
    		<fileset dir="register">
    			<include name="*"/>
    		</fileset>
    	</copy>
    	<copy todir="${build.dist}/register/config">
    		<fileset dir="register/config">
    			<include name="*"/>
    		</fileset>
    	</copy>
    	<copy todir="${build.dist}/register/lib">
    		<fileset dir="register/lib">
    			<include name="*.jar"/>
    		</fileset>
    	</copy>

        
        <mkdir dir="${build.dist.game}/log" />
    	<mkdir dir="${build.dist.login}/log" />
        <mkdir dir="${build.dist.game}/hibernate-mapping" />
    	
    	<mkdir dir="${build.dist.login}/config" />
    	<mkdir dir="${build.dist.login}/config/network" />
    	<mkdir dir="${build.dist.login}/config/protected" />
    	
        <mkdir dir="${build.dist.game}/config/events" />
    	<mkdir dir="${build.dist.game}/config/protected" />
    	<mkdir dir="${build.dist.game}/config/head" />
    	<mkdir dir="${build.dist.game}/config/functions" />
    	<mkdir dir="${build.dist.game}/config/powerpak" />
    	<mkdir dir="${build.dist.game}/config/powerpak/webservices" />
    	<mkdir dir="${build.dist.game}/config/network" />
    	<mkdir dir="${build.dist.game}/config/fun" />
        <mkdir dir="${build.dist.game}/config/daemons" />
        
        <mkdir dir="${build.dist.login}/config_en" />
    	<mkdir dir="${build.dist.login}/config_en/network" />
    	<mkdir dir="${build.dist.login}/config_en/protected" />
    	
    	<mkdir dir="${build.dist.game}/config_en/protected" />
    	<mkdir dir="${build.dist.game}/config_en/head" />
    	<mkdir dir="${build.dist.game}/config_en/functions" />
    	<mkdir dir="${build.dist.game}/config_en/powerpak" />
    	<mkdir dir="${build.dist.game}/config_en/powerpak/webservices" />
    	<mkdir dir="${build.dist.game}/config_en/network" />
    	<mkdir dir="${build.dist.game}/config_en/fun" />
    	
        <mkdir dir="${build.dist.game}/data" />
    	<mkdir dir="${build.dist.game}/data/csv"/>
    	<mkdir dir="${build.dist.game}/data/sts"/>
    	<mkdir dir="${build.dist.game}/data/scripts"/>
    	<mkdir dir="${build.dist.game}/data/scripts/task"/>
    	
    	
    	<!-- game server -->
    	<copy todir="${build.dist.game}/config">
			<fileset dir="config">
				<include name="*.properties"/>
                <include name="*.info"/>
                <include name="log4j.xml"/>
                <include name="chatfilter.txt"/>
                <include name="tradefilter.txt"/>
				<include name="Custom.txt"/>
				<include name="questionwords.txt"/>
				<include name="key.cfg"/>
				<include name="start.bin"/>
			</fileset>
        </copy>
        
       <copy todir="${build.dist.game}/config_en">
			<fileset dir="config_en">
				<include name="*.properties"/>
				<include name="*.info"/>
				<include name="chatfilter.txt"/>
                                <include name="tradefilter.txt"/>
				<include name="Custom.txt"/>
				<include name="questionwords.txt"/>
				<include name="key.cfg"/>
				<include name="start.bin"/>
			</fileset>
        </copy>
        
        <copy todir="${build.dist.game}/config/events">
			<fileset dir="config/events">
				<include name="*.properties"/>
			</fileset>
        </copy>
    	
    	<copy todir="${build.dist.game}/config/protected">
			<fileset dir="config/protected">
				<include name="*.properties"/>
			</fileset>
        </copy>
        <copy todir="${build.dist.game}/config_en/protected">
			<fileset dir="config_en/protected">
				<include name="*.properties"/>
			</fileset>
        </copy>
    	
    	<copy todir="${build.dist.game}/config/functions">
    		<fileset dir="config/functions">
    			<include name="*.properties"/>
    		</fileset>
    	</copy>
        <copy todir="${build.dist.game}/config_en/functions">
    		<fileset dir="config_en/functions">
    			<include name="*.properties"/>
    		</fileset>
    	</copy>
    	
    	<copy todir="${build.dist.game}/config/head">
    		<fileset dir="config/head">
    			<include name="*.properties"/>
    		</fileset>
    	</copy>
        <copy todir="${build.dist.game}/config_en/head">
    		<fileset dir="config/head">
    			<include name="*.properties"/>
    		</fileset>
    	</copy>

    	<copy todir="${build.dist.game}/config/powerpak">
    		<fileset dir="config/powerpak">
    			<include name="*.*"/>
    		</fileset>
    	</copy>
        <copy todir="${build.dist.game}/config_en/powerpak">
    		<fileset dir="config_en/powerpak">
    			<include name="*.*"/>
    		</fileset>
    	</copy>

    	<copy todir="${build.dist.game}/config/powerpak/webservices"> 
    		<fileset dir="config/powerpak/webservices"> 
    			<include name="*.*"/> 
    		</fileset> 
    	</copy> 
       <copy todir="${build.dist.game}/config_en/powerpak/webservices"> 
    		<fileset dir="config_en/powerpak/webservices"> 
    			<include name="*.*"/> 
    		</fileset> 
    	</copy> 

    	<copy todir="${build.dist.game}/config/fun">
    		<fileset dir="config/fun">
    			<include name="*.properties"/>
    		</fileset>
    	</copy>
        <copy todir="${build.dist.game}/config_en/fun">
    		<fileset dir="config_en/fun">
    			<include name="*.properties"/>
    		</fileset>
    	</copy>
    	<!-- network gameserver -->
    	<copy todir="${build.dist.game}/config/network">
    		<fileset dir="config/network">
    	 		<include name="gameserver.properties"/>
    		</fileset>
   	</copy>
       <copy todir="${build.dist.game}/config_en/network">
    		<fileset dir="config_en/network">
    	 		<include name="gameserver.properties"/>
    		</fileset>
   	</copy>
    	
    	<copy todir="${build.dist.game}/">
    		<fileset dir="config/others">
    			<include name="*.*"/>
    		</fileset>
    	</copy>
        <copy todir="${build.dist.game}/">
    		<fileset dir="config_en/others">
    			<include name="*.*"/>
    		</fileset>
    	</copy>
    	
    	
    	<!-- login server -->
    	<copy todir="${build.dist.login}/config">
			<fileset dir="config">
				<include name="telnet.properties"/>
			</fileset>
	</copy>
        <copy todir="${build.dist.login}/config_en">
			<fileset dir="config_en">
				<include name="telnet.properties"/>
			</fileset>
	</copy>
    	
    	<copy todir="${build.dist.login}/config/protected">
    		<fileset dir="config/protected">
    			<include name="mmocore.properties"/>
    		</fileset>
    	</copy>
        <copy todir="${build.dist.login}/config_en/protected">
    		<fileset dir="config_en/protected">
    			<include name="mmocore.properties"/>
    		</fileset>
    	</copy>
    	<!-- network ls -->
    	<copy todir="${build.dist.login}/config/network">
    		<fileset dir="config/network">
    			<include name="loginserver.properties"/>
    		</fileset>
    	</copy>
        <copy todir="${build.dist.login}/config_en/network">
    		<fileset dir="config_en/network">
    			<include name="loginserver.properties"/>
    		</fileset>
    	</copy>
    	

        <copy todir="${build.dist.game}/data">
            <fileset dir="data">
            	<include name="*.txt"/>
			</fileset>
        </copy>
    	
    	<copy todir="${build.dist.game}/data/csv">
    		<fileset dir="data/csv">
    	    	<include name="*.csv"/>
    		</fileset>
    	</copy>
    	
    	<copy todir="${build.dist.game}/data/sts">
    		<fileset dir="data/sts">
    	    	<include name="*.sts"/>
    			<include name="*.txt"/>
    		</fileset>
    	</copy>

        <zip destfile="${build}/L2Jscoria_GameServer.zip"
             basedir="${build.dist}" />
    </target>   
    
    <target name="version"
      depends="init"
      description="Create l2scoria-server.properties file">
      <tstamp>
        <format property="build.tstamp" pattern="dd-MM-yyyy hh:mm:ss aa"/>
      </tstamp>
      <exec dir="." executable="svnversion" outputproperty="l2scoria.revision"
        failifexecutionfails="false">
        <arg line="-n ."/>
      </exec>
      <concat destfile="${properties-file}">
      revision=${l2scoria.revision}
      builddate=${build.tstamp}
      version=3
      detailed info:
      </concat>
      <concat destfile="${properties-file}" append="true">
        <filelist dir="${src}/../.svn/" files="entries"/>
        <filterchain>
          <prefixlines prefix="          "/>
          <headfilter lines="2" skip="10"/>
          <tokenfilter>
             <ignoreblank/>
          </tokenfilter>
        </filterchain>
     </concat>
    </target>
	
    
    <target name="clean"
            description="Remove the output directories">

        <delete dir="${build}"/>
    </target>
</project>